name: Flutter CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 55
    strategy:
      matrix:
        api-level: [29]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: "3.19.6"

      - run: flutter --version

      - name: Install dependencies
        run: flutter pub get

      - name: Delete unnecessary tools ðŸ”§
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          android: false # Keep Don't remove Android tools
          tool-cache: true # Remove image tool cache - rm -rf "$AGENT_TOOLSDIRECTORY"
          dotnet: true # rm -rf /usr/share/dotnet
          haskell: true # rm -rf /opt/ghc...
          swap-storage: true # rm -f /mnt/swapfile (4GiB)
          docker-images: false # Takes 16s (`nowinandroid`), enable if needed in the future
          large-packages: false # includes google-cloud-sdk and it's slow

      # Set up KVM permissions to enable efficient Android emulator runs by modifying udev rules for universal access.
      # From https://github.com/android/nowinandroid/blob/main/.github/workflows/Build.yaml#L142
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          ls /dev/kvm

      - name: Connected tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          # From https://github.com/android/nowinandroid >>>
          arch: x86_64
          disable-animations: true
          disk-size: 6000M
          heap-size: 600M
          # <<<<
          #force-avd-creation: false
          #emulator-options: -no-snapshot-save
          #avd-name: ubuntu-avd-28
          script: ./gradlew :persistence:connectedDebugAndroidTest :datacapturing:connectedDebugAndroidTest :synchronization:connectedDebugAndroidTest --daemon
          # To execute a single test class
          #script: ./gradlew :datacapturing:connectedCyfaceMockDebugAndroidTest -Pandroid.testInstrumentationRunnerArguments.class=de.cyface.datacapturing.DataCapturingServiceTest --daemon

      - name: Verify emulator is running
        run: adb devices

      - name: Run tests with Gradle
        run: |
          cd android  # Navigate to the Android project directory
          ./gradlew connectedCheck

      - name: Run end-to-end test
        run: flutter drive --driver=test_driver/integration_test.dart --target=test/e2e/calculator_e2e_test.dart
